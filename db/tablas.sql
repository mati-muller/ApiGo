CREATE TABLE procesos (
    ID INT PRIMARY KEY IDENTITY(1,1),
    NVNUMERO INT NOT NULL,
    NVESTADO NVARCHAR(MAX) DEFAULT NULL,
    FECHA_NV NVARCHAR(MAX) DEFAULT NULL,
    FECHA_ENTREGA NVARCHAR(MAX) DEFAULT NULL,
    CONCAUTO NVARCHAR(MAX) DEFAULT NULL,
    CODPROD NVARCHAR(MAX) DEFAULT NULL,
    NVCANT INT DEFAULT NULL,
    CANT_FACT INT DEFAULT NULL,
    DIF_FACT INT DEFAULT NULL,
    NVPRECIO DECIMAL(10,2) DEFAULT NULL,
    DETPROD NVARCHAR(MAX) DEFAULT NULL,
    NOMAUX NVARCHAR(MAX) DEFAULT NULL,
    CODPROC NVARCHAR(MAX) DEFAULT NULL,
    PROCESO NVARCHAR(MAX) DEFAULT NULL,
    DESCPROC NVARCHAR(MAX) DEFAULT NULL,
    TIEMPO INT DEFAULT NULL,
    CANTPROD INT DEFAULT NULL
);

CREATE TABLE procesos2 (
    ID INT PRIMARY KEY,
    ESTADO_PROC NVARCHAR(MAX) DEFAULT 'PENDIENTE',
    CANT_PROD INT DEFAULT 0,
    CANT_A_PROD INT DEFAULT NULL,
    PLACA NVARCHAR(MAX) DEFAULT NULL,
    PLACAS_USADAS NVARCHAR(MAX) DEFAULT NULL,
    PLACAS_BUENAS NVARCHAR(MAX) DEFAULT NULL,
    PLACAS_MALAS NVARCHAR(MAX) DEFAULT NULL,
    TIEMPO_TOTAL DECIMAL(10,2) DEFAULT NULL,
    NUMERO_PERSONAS INT DEFAULT 0,
    STOCK NVARCHAR(MAX) DEFAULT NULL,
    [USER] NVARCHAR(MAX) DEFAULT NULL,
    STOCK_CANT INT DEFAULT 0,

    FOREIGN KEY (ID) REFERENCES procesos(ID)
);

CREATE TABLE nv_hechas(
    NVENTA INT DEFAULT NULL
);

CREATE TABLE inventario (
	ID INT PRIMARY KEY IDENTITY(1,1),
    placa NVARCHAR(MAX),
    cantidad INT DEFAULT NULL,
    cantidad_total_usada INT DEFAULT 0,
    fecha_compra NVARCHAR(MAX) DEFAULT NULL,
    precio_pp DECIMAL(10,2) DEFAULT NULL,
    precio_total DECIMAL(10,2) DEFAULT NULL
);

CREATE TABLE users (
    ID INT PRIMARY KEY IDENTITY(1,1),
    USERNAME NVARCHAR(MAX) NOT NULL,
    PASSWORD NVARCHAR(MAX) NOT NULL,
    NOMBRE NVARCHAR(MAX) DEFAULT NULL,
    APELLIDO NVARCHAR(MAX) DEFAULT NULL,
    ROL NVARCHAR(MAX) DEFAULT NULL,
    procesos NVARCHAR(MAX) DEFAULT NULL
);

CREATE TABLE PROCESOS (
    ID INT PRIMARY KEY,
    CANT_A_FABRICAR INT DEFAULT NULL,
    PRIORITY INT DEFAULT NULL,
    PLACAS_A_USAR NVARCHAR(MAX) DEFAULT NULL,
    CANTIDAD_PLACAS NVARCHAR(MAX) DEFAULT NULL,
    CANTODAD_PRODUCIDA INT DEFAULT 0,
    FOREIGN KEY (ID) REFERENCES procesos(ID)
);



CREATE TABLE HISTORIAL (
    ID INT PRIMARY KEY IDENTITY(1,1),
    ID_PROCESO INT DEFAULT NULL,
    CANTIDAD INT DEFAULT NULL,
    PLACA NVARCHAR(MAX) DEFAULT NULL,
    PLACAS_USADAS NVARCHAR(MAX) DEFAULT NULL,
    PLACAS_BUENAS NVARCHAR(MAX) DEFAULT NULL,
    PLACAS_MALAS NVARCHAR(MAX) DEFAULT NULL,
    TIEMPO_TOTAL DECIMAL(10,2) DEFAULT NULL,
    NUMERO_PERSONAS INT DEFAULT 0,
    STOCK NVARCHAR(MAX) DEFAULT NULL,
    [USER] NVARCHAR(MAX) DEFAULT NULL,
    STOCK_CANT INT DEFAULT 0,
    FECHA DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (ID_PROCESO) REFERENCES procesos(ID)
);
-- Script para corregir los datos de las columnas PLACAS_USADAS, PLACAS_BUENAS y PLACAS_MALAS
-- en la tabla procesos2, convirtiéndolos a arrays de enteros en JSON.

UPDATE procesos2
SET PLACAS_USADAS = (
    SELECT '[' + STRING_AGG(CAST(TRY_CAST(value AS INT) AS NVARCHAR(MAX)), ',') + ']'
    FROM STRING_SPLIT(PLACAS_USADAS, ',')
),
PLACAS_BUENAS = (
    SELECT '[' + STRING_AGG(CAST(TRY_CAST(value AS INT) AS NVARCHAR(MAX)), ',') + ']'
    FROM STRING_SPLIT(PLACAS_BUENAS, ',')
),
PLACAS_MALAS = (
    SELECT '[' + STRING_AGG(CAST(TRY_CAST(value AS INT) AS NVARCHAR(MAX)), ',') + ']'
    FROM STRING_SPLIT(PLACAS_MALAS, ',')
)
WHERE ISJSON(PLACAS_USADAS) = 0 OR ISJSON(PLACAS_BUENAS) = 0 OR ISJSON(PLACAS_MALAS) = 0;

-- Validar que los datos ahora estén correctamente formateados como JSON
SELECT ID, PLACAS_USADAS, PLACAS_BUENAS, PLACAS_MALAS
FROM procesos2
WHERE ISJSON(PLACAS_USADAS) = 0 OR ISJSON(PLACAS_BUENAS) = 0 OR ISJSON(PLACAS_MALAS) = 0;

-- para colocar en windows
CREATE TABLE procesos (
    ID INT PRIMARY KEY IDENTITY(1,1),
    NVNUMERO INT NOT NULL,
    NVESTADO NVARCHAR(MAX) DEFAULT NULL,
    FECHA_NV NVARCHAR(MAX) DEFAULT NULL,
    FECHA_ENTREGA NVARCHAR(MAX) DEFAULT NULL,
    CONCAUTO NVARCHAR(MAX) DEFAULT NULL,
    CODPROD NVARCHAR(MAX) DEFAULT NULL,
    NVCANT INT DEFAULT NULL,
    CANT_FACT INT DEFAULT NULL,
    DIF_FACT INT DEFAULT NULL,
    NVPRECIO DECIMAL(10,2) DEFAULT NULL,
    DETPROD NVARCHAR(MAX) DEFAULT NULL,
    NOMAUX NVARCHAR(MAX) DEFAULT NULL,
    CODPROC NVARCHAR(MAX) DEFAULT NULL,
    PROCESO NVARCHAR(MAX) DEFAULT NULL,
    DESCPROC NVARCHAR(MAX) DEFAULT NULL,
    TIEMPO INT DEFAULT NULL,
    CANTPROD INT DEFAULT NULL
);

CREATE TABLE procesos2 (
    ID INT PRIMARY KEY,
    ESTADO_PROC NVARCHAR(MAX) DEFAULT 'PENDIENTE',
    CANT_PROD INT DEFAULT 0,
    CANT_A_PROD INT DEFAULT NULL,
    PLACA NVARCHAR(MAX) DEFAULT NULL,
    PLACAS_USADAS NVARCHAR(MAX) DEFAULT NULL,
    PLACAS_BUENAS NVARCHAR(MAX) DEFAULT NULL,
    PLACAS_MALAS NVARCHAR(MAX) DEFAULT NULL,
    TIEMPO_TOTAL DECIMAL(10,2) DEFAULT NULL,
    NUMERO_PERSONAS INT DEFAULT 0,
    STOCK NVARCHAR(MAX) DEFAULT NULL,
    [USER] NVARCHAR(MAX) DEFAULT NULL,
    STOCK_CANT INT DEFAULT 0,

    FOREIGN KEY (ID) REFERENCES procesos(ID)
);

CREATE TABLE nv_hechas(
    NVENTA INT DEFAULT NULL
);

CREATE TABLE inventario (
	ID INT PRIMARY KEY IDENTITY(1,1),
    placa NVARCHAR(MAX),
    cantidad INT DEFAULT NULL,
    cantidad_total_usada INT DEFAULT 0,
    fecha_compra NVARCHAR(MAX) DEFAULT NULL,
    precio_pp DECIMAL(10,2) DEFAULT NULL,
    precio_total DECIMAL(10,2) DEFAULT NULL
);

CREATE TABLE users (
    ID INT PRIMARY KEY IDENTITY(1,1),
    USERNAME NVARCHAR(MAX) NOT NULL,
    PASSWORD NVARCHAR(MAX) NOT NULL,
    NOMBRE NVARCHAR(MAX) DEFAULT NULL,
    APELLIDO NVARCHAR(MAX) DEFAULT NULL,
    ROL NVARCHAR(MAX) DEFAULT NULL,
    procesos NVARCHAR(MAX) DEFAULT NULL
);

CREATE TABLE ENCOLADO (
    ID INT PRIMARY KEY,
    CANT_A_FABRICAR INT DEFAULT NULL,
    PRIORITY INT DEFAULT NULL,
    PLACAS_A_USAR NVARCHAR(MAX) DEFAULT NULL,
    CANTIDAD_PLACAS NVARCHAR(MAX) DEFAULT NULL,
    FOREIGN KEY (ID) REFERENCES procesos(ID)
);

CREATE TABLE ENCOLADO2 (
    ID INT PRIMARY KEY,
    CANT_A_FABRICAR INT DEFAULT NULL,
    PRIORITY INT DEFAULT NULL,
    PLACAS_A_USAR NVARCHAR(MAX) DEFAULT NULL,
    CANTIDAD_PLACAS NVARCHAR(MAX) DEFAULT NULL,
    FOREIGN KEY (ID) REFERENCES procesos(ID)
);

CREATE TABLE TROQUELADO (
    ID INT PRIMARY KEY,
    CANT_A_FABRICAR INT DEFAULT NULL,
    PRIORITY INT DEFAULT NULL,
    PLACAS_A_USAR NVARCHAR(MAX) DEFAULT NULL,
    CANTIDAD_PLACAS NVARCHAR(MAX) DEFAULT NULL,
    FOREIGN KEY (ID) REFERENCES procesos(ID)
);
CREATE TABLE TROQUELADO2 (
    ID INT PRIMARY KEY,
    CANT_A_FABRICAR INT DEFAULT NULL,
    PRIORITY INT DEFAULT NULL,
    PLACAS_A_USAR NVARCHAR(MAX) DEFAULT NULL,
    CANTIDAD_PLACAS NVARCHAR(MAX) DEFAULT NULL,
    FOREIGN KEY (ID) REFERENCES procesos(ID)
);


CREATE TABLE MULTIPLE (
    ID INT PRIMARY KEY,
    CANT_A_FABRICAR INT DEFAULT NULL,
    PRIORITY INT DEFAULT NULL,
    PLACAS_A_USAR NVARCHAR(MAX) DEFAULT NULL,
    CANTIDAD_PLACAS NVARCHAR(MAX) DEFAULT NULL,
    FOREIGN KEY (ID) REFERENCES procesos(ID)
);

CREATE TABLE MULTIPLE2 (
    ID INT PRIMARY KEY,
    CANT_A_FABRICAR INT DEFAULT NULL,
    PRIORITY INT DEFAULT NULL,
    PLACAS_A_USAR NVARCHAR(MAX) DEFAULT NULL,
    CANTIDAD_PLACAS NVARCHAR(MAX) DEFAULT NULL,
    FOREIGN KEY (ID) REFERENCES procesos(ID)
);


CREATE TABLE TROZADO (
    ID INT PRIMARY KEY,
    CANT_A_FABRICAR INT DEFAULT NULL,
    PRIORITY INT DEFAULT NULL,
    PLACAS_A_USAR NVARCHAR(MAX) DEFAULT NULL,
    CANTIDAD_PLACAS NVARCHAR(MAX) DEFAULT NULL,
    FOREIGN KEY (ID) REFERENCES procesos(ID)
);


CREATE TABLE EMPLACADO (
    ID INT PRIMARY KEY,
    CANT_A_FABRICAR INT DEFAULT NULL,
    PRIORITY INT DEFAULT NULL,
    PLACAS_A_USAR NVARCHAR(MAX) DEFAULT NULL,
    CANTIDAD_PLACAS NVARCHAR(MAX) DEFAULT NULL,
    FOREIGN KEY (ID) REFERENCES procesos(ID)
);

CREATE TABLE CALADO (
    ID INT PRIMARY KEY,
    CANT_A_FABRICAR INT DEFAULT NULL,
    PRIORITY INT DEFAULT NULL,
    PLACAS_A_USAR NVARCHAR(MAX) DEFAULT NULL,
    CANTIDAD_PLACAS NVARCHAR(MAX) DEFAULT NULL,
    FOREIGN KEY (ID) REFERENCES procesos(ID)
);

CREATE TABLE IMPRESION (
    ID INT PRIMARY KEY,
    CANT_A_FABRICAR INT DEFAULT NULL,
    PRIORITY INT DEFAULT NULL,
    PLACAS_A_USAR NVARCHAR(MAX) DEFAULT NULL,
    CANTIDAD_PLACAS NVARCHAR(MAX) DEFAULT NULL,
    FOREIGN KEY (ID) REFERENCES procesos(ID)
);

CREATE TABLE PLIZADO (
    ID INT PRIMARY KEY,
    CANT_A_FABRICAR INT DEFAULT NULL,
    PRIORITY INT DEFAULT NULL,
    PLACAS_A_USAR NVARCHAR(MAX) DEFAULT NULL,
    CANTIDAD_PLACAS NVARCHAR(MAX) DEFAULT NULL,
    FOREIGN KEY (ID) REFERENCES procesos(ID)
);
CREATE TABLE PEGADO (
    ID INT PRIMARY KEY,
    CANT_A_FABRICAR INT DEFAULT NULL,
    PRIORITY INT DEFAULT NULL,
    PLACAS_A_USAR NVARCHAR(MAX) DEFAULT NULL,
    CANTIDAD_PLACAS NVARCHAR(MAX) DEFAULT NULL,
    FOREIGN KEY (ID) REFERENCES procesos(ID)
);

CREATE TABLE HISTORIAL (
    ID INT PRIMARY KEY IDENTITY(1,1),
    ID_PROCESO INT DEFAULT NULL,
    CANTIDAD INT DEFAULT NULL,
    PLACA NVARCHAR(MAX) DEFAULT NULL,
    PLACAS_USADAS NVARCHAR(MAX) DEFAULT NULL,
    PLACAS_BUENAS NVARCHAR(MAX) DEFAULT NULL,
    PLACAS_MALAS NVARCHAR(MAX) DEFAULT NULL,
    TIEMPO_TOTAL DECIMAL(10,2) DEFAULT NULL,
    NUMERO_PERSONAS INT DEFAULT 0,
    STOCK NVARCHAR(MAX) DEFAULT NULL,
    [USER] NVARCHAR(MAX) DEFAULT NULL,
    STOCK_CANT INT DEFAULT 0,
    FECHA DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (ID_PROCESO) REFERENCES procesos(ID)
);

UPDATE procesos2
SET PLACAS_USADAS = (
    SELECT '[' + STRING_AGG(CAST(TRY_CAST(value AS INT) AS NVARCHAR(MAX)), ',') + ']'
    FROM STRING_SPLIT(PLACAS_USADAS, ',')
),
PLACAS_BUENAS = (
    SELECT '[' + STRING_AGG(CAST(TRY_CAST(value AS INT) AS NVARCHAR(MAX)), ',') + ']'
    FROM STRING_SPLIT(PLACAS_BUENAS, ',')
),
PLACAS_MALAS = (
    SELECT '[' + STRING_AGG(CAST(TRY_CAST(value AS INT) AS NVARCHAR(MAX)), ',') + ']'
    FROM STRING_SPLIT(PLACAS_MALAS, ',')
)
WHERE ISJSON(PLACAS_USADAS) = 0 OR ISJSON(PLACAS_BUENAS) = 0 OR ISJSON(PLACAS_MALAS) = 0;

-- Validar que los datos ahora estén correctamente formateados como JSON
SELECT ID, PLACAS_USADAS, PLACAS_BUENAS, PLACAS_MALAS
FROM procesos2
WHERE ISJSON(PLACAS_USADAS) = 0 OR ISJSON(PLACAS_BUENAS) = 0 OR ISJSON(PLACAS_MALAS) = 0;

-- Agregar columna despunte a procesos2 si no existe
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'procesos2' AND COLUMN_NAME = 'despunte')
BEGIN
    ALTER TABLE procesos2 ADD despunte BIT DEFAULT 0;
END

-- Script para actualizar la definición de procesos2 con la nueva columna despunte
/*
ALTER TABLE procesos2 ADD despunte BIT DEFAULT 0;
*/

-- Agregar columna despunte a HISTORIAL si no existe
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'HISTORIAL' AND COLUMN_NAME = 'despunte')
BEGIN
    ALTER TABLE HISTORIAL ADD despunte BIT DEFAULT 0;
END